<?php

namespace app\visitor;

abstract class CompositeUnit extends Unit
{
    protected array $units = [];

    public function getComposite()
    {
        return $this;
    }

    public function accept(ArmyVisitor $armyVisitor)
    {
        parent::accept($armyVisitor); // TODO: Change the autogenerated stub
        foreach ($this->units as $thisunit){
            $thisunit->accept($armyVisitor);
        }
    }

    public function addUnit(Unit $unit){
        if(in_array($unit, $this->units, true)){
            return;
        }
        foreach ($this->units as $thisunit){
            if($unit === $thisunit){
                return;
            }
        }
        $this->setDepth($this->depth + 1);
        $this->units[] = $unit;
    }

    public function removeUnit(Unit $unit){
        $index = array_search($unit, $this->units, true);
        if(is_int($index)){
            array_splice($this->units, $index, 1, []);
        }
    }

    public function getUnits() : array
    {
        return $this->units;
    }
}